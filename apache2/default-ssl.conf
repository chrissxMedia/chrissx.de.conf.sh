<VirtualHost *:443>
        # Sets our domain
        ServerAlias chrissx.ga

        # Enables h2 and http/1.1 as fallback
        Protocols h2 http/1.1

        ServerAdmin pi@localhost
        DocumentRoot /var/www/html

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf

        #   Enable TLS for this virtual host.
        SSLEngine on

        #   Our LetsEncrypt cert
        SSLCertificateFile      /etc/letsencrypt/live/chrissx.ga/cert.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/chrissx.ga/privkey.pem

        #   Server Certificate Chain:
        #   Point SSLCertificateChainFile at a file containing the
        #   concatenation of PEM encoded CA certificates which form the
        #   certificate chain for the server certificate. Alternatively
        #   the referenced file can be the same as SSLCertificateFile
        #   when the CA certificates are directly appended to the server
        #   certificate for convinience.
        SSLCertificateChainFile /etc/letsencrypt/live/chrissx.ga/chain.pem

        <FilesMatch "\.(cgi|shtml|phtml|php)$">
                        SSLOptions +StdEnvVars
        </FilesMatch>
        <Directory /usr/lib/cgi-bin>
                        SSLOptions +StdEnvVars
        </Directory>

        #   SSL Protocol Adjustments:
        #   The safe and default but still SSL/TLS standard compliant shutdown
        #   approach is that mod_ssl sends the close notify alert but doesn't wait for
        #   the close notify alert from client. When you need a different shutdown
        #   approach you can use one of the following variables:
        #   o ssl-unclean-shutdown:
        #        This forces an unclean shutdown when the connection is closed, i.e. no
        #        SSL close notify alert is send or allowed to received.  This violates
        #        the SSL/TLS standard but is needed for some brain-dead browsers. Use
        #        this when you receive I/O errors because of the standard approach where
        #        mod_ssl sends the close notify alert.
        #   o ssl-accurate-shutdown:
        #        This forces an accurate shutdown when the connection is closed, i.e. a
        #        SSL close notify alert is send and mod_ssl waits for the close notify
        #        alert of the client. This is 100% SSL/TLS standard compliant, but in
        #        practice often causes hanging connections with brain-dead browsers. Use
        #        this only for browsers where you know that their SSL implementation
        #        works correctly.
        #   Notice: Most problems of broken clients are also related to the HTTP
        #   keep-alive facility, so you usually additionally want to disable
        #   keep-alive for those clients, too. Use variable "nokeepalive" for this.
        #   Similarly, one has to force some clients to use HTTP/1.0 to workaround
        #   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
        #   "force-response-1.0" for this.
        # BrowserMatch "MSIE [2-6]" \
        #               nokeepalive ssl-unclean-shutdown \
        #               downgrade-1.0 force-response-1.0

        # Make h2 TLS only
        H2ModernTLSOnly on
        # Upgrade http/1.1 to h2 if possible
        H2Upgrade on

        # Set DH params
        SSLOpenSSLConfCmd DHParameters "/etc/ssl/private/dhparams.pem"

        # Set encryption to secure only
        SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
        # Use server's preferred cipher suite which is usually quite strong
        SSLHonorCipherOrder On
        # Turn off compression because of CRIME
        SSLCompression off

        # Disable "Powered by PHP2.6.9!!11eleven!", etc.
        Header always unset X-Powered-By

        Header always set Public-Key-Pins "max-age=100000; includeSubDomains; pin-sha256=\"Vjs8r4z+80wjNcr1YKepWQboSIRi63WsWXhIMN+eWys=\"; sha256=\"YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg=\""
        Header always set Referrer-Policy "no-referrer-when-downgrade"
        # Force TLS with preload
        Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        # Disable iframes that might have been injected
        Header always set X-Frame-Options SAMEORIGIN
        # Tell browser to not find a...js where is none
        Header always set X-Content-Type-Options "nosniff"
        # If the browser detects an XSS it stops rendering the page
        Header always set X-XSS-Protection "1; mode=block"
        # Don't accept imgs, scripts and styles from anywhere else than this server
        Header always set Content-Security-Policy "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'"

        # Best cipher suite config on the planet xD (it's really quite good)
        SSLCipherSuite ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
